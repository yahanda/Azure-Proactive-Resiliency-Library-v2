- description: コードとしてのインフラストラクチャとの一貫性を確保するために手動構成を回避する
  aprlGuid: 6bf9e5d5-fe57-c647-8daa-4903770e1302
  recommendationTypeId: null
  recommendationControl: Automation
  recommendationImpact: Medium
  recommendationResourceType: WellArchitected/Deploy
  recommendationMetadataState: Active
  longDescription: |-
    コードとしてのインフラストラクチャ (IaC) は、DevOps 手法と記述モデルによるバージョン管理を使用して、ネットワーク、仮想マシン、ロード バランサー、接続トポロジなどのインフラストラクチャを定義およびデプロイします。同じソース コードから常に同じバイナリが生成されるのと同じように、IaC モデルはデプロイするたびに同じ環境を生成します。

    IaC は重要な DevOps プラクティスであり、継続的デリバリーのコンポーネントです。 IaC を使用すると、DevOps チームは統一されたプラクティスとツールのセットを使用して連携して、アプリケーションとそのサポート インフラストラクチャを迅速かつ確実に大規模に提供できます。

    キーポイント：
    - 一貫性を確保するために手動構成を避ける
    - 安定したテスト環境を大規模かつ迅速に提供
    - 宣言型定義ファイルを使用する
  potentialBenefits: Ensures consistent, scalable deployments
  pgVerified: true
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: No
  tags: null
  learnMoreLink:
    - name: Avoid manual configuration to enforce consistency
      url: "https://learn.microsoft.com/devops/deliver/what-is-infrastructure-as-code#avoid-manual-configuration-to-enforce-consistency"
- description: 開発環境でのすべての変更を実稼働環境に適用する前に検証しました。
  aprlGuid: e42e646c-7d67-dd4b-96dc-16a3439fa030
  recommendationTypeId: null
  recommendationControl: Automation
  recommendationImpact: Medium
  recommendationResourceType: WellArchitected/Deploy
  recommendationMetadataState: Active
  longDescription: |-
    価値を継続的に提供することは、組織にとって必須の要件となっています。エンドユーザーに価値を提供するには、エラーなく継続的にリリースする必要があります。

    継続的デリバリー (CD) は、ビルド、テスト、構成、およびビルドから実稼働環境へのデプロイメントを自動化するプロセスです。

    リリース パイプラインでは、複数のテスト環境またはステージング環境を作成して、インフラストラクチャの作成を自動化し、新しいビルドをデプロイできます。後続の環境では、統合、負荷、およびユーザー受け入れテストの長期実行アクティビティが徐々にサポートされます。
  potentialBenefits: Ensures error-free releases
  pgVerified: true
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: No
  tags: null
  learnMoreLink:
    - name: Safe deployment practices
      url: "https://learn.microsoft.com/devops/operate/safe-deployment-practices"
